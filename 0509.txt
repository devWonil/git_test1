서브쿼리 -1

서브쿼리 종류
: 서브쿼리는 쿼리의 위치가 어디에 있느냐에 따라서 세가지 종류로 나눌 수 있다

1. 중첩 서브쿼리(Nested SubQuery) :Where 절에 사용하는 서브쿼리
2. 인라인 뷰(Inline View) : From 절에 사용하는 서브쿼리
3. 스칼라 서브쿼리(Scalar SubQuery) : Select 절에 사용하는 서브쿼리
: 내부쿼리 괄호를 반드시 감싸져있어야 한다

서브쿼리의 특징

서브쿼리를 사용하면 다음과 같은 장점
1. 서브쿼리는 쿼리를 구조화 시키므로, 쿼리의 각 부분을 명확히 구분할 수 있게 해준다
2. 서브쿼리는 복잡한 JOIN이나 UNION과 같은 동작을 수행할 수 있는 또다른 방법을 제공한다
3. 서브쿼리는 복잡한 JOIN이나 UNION보다 좀 더 읽기 편하다


옵티마이저는 가장 효율적인 방법으로 SQL을 수행할 최적의 처리 경로를 생성해주는 DBMS의 핵심 엔진입니다. 컴퓨터의 두뇌가 CPU인 것처럼 DBMS의 두뇌는 옵티마이저라고 할 수 있습니다. 개발자가 SQL을 작성하고 실행하면 소프트웨어 실행파일처럼 즉시 실행되는 것이 아니라 옵티마이저(Optimizer)라는 곳에서 "이 쿼리문을 어떻게 실행시키겠다!"라는 여러 가지 실행계획을 세우게 됩니다. 이렇게 실행계획을 세운 뒤 시스템 통계정보를 활용하여 각 실행계획의 예상 비용을 산정한 후 각 실행계획을 비교해서 최고의 효율을 가지고 있는 실행계획을 판별한 후 그 실행계획에 따라 쿼리를 수행하게 되는 것입니다.
JOIN의 종류는 크게 INNER JOIN과 OUTER JOIN으로 구분할 수 있고, OUTER JOIN은 다시 LEFT OUTER JOIN, RIGHT OUTER JOIN, FULL OUTER JOIN으로 구분할 수 있습니다.
조인의 처리에서 어느 테이블을 먼저 읽을지를 결정하는 것은 상당히 중요하며, 그에 따라 처리할 작업량이 상당히 달라집니다.

INNER JOIN은 어느 테이블을 먼저 읽어도 결과가 달라지지 않으므로 MySQL 옵티마이저가 JOIN의 순서를 조절해서 다양한 방법으로 최적화를 수행할 수 있습니다. 하지만 OUTER JOIN은 반드시 OUTER가 되는 테이블을 먼저 읽어야 하기 때문에 조인 순서를 옵티마이저가 선택할 수 없습니다.

일반적으로 조인이라 함은 INNER JOIN을 지칭하는데, 별도로 OUTER JOIN과 구분할 때 이너 조인이라고도 합니다. 별로도 명시하지 않고 사용하면 INNER JOIN으로 사용됩니다.